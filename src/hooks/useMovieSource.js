// src/hooks/useMovieSource.js
import { getSource } from "../api/htttp/hdrezka";
import kodiWebSocket, { waitForPlayerOnPlay } from "../api/ws/kodiWebSocket"; // üëà

const useMovieSource = () => {
  const playMovieSource = async ({
    seasonId,
    episodeId,
    movieId,
    translatorId,
    action,
  }) => {
    try {
      const data = await getSource(
        seasonId,
        episodeId,
        movieId,
        translatorId,
        action
      );
      let sourcesArray = [];
      if (Array.isArray(data)) {
        sourcesArray = data;
      } else if (Array.isArray(data.source)) {
        sourcesArray = data.source;
      } else if (Array.isArray(data.sources)) {
        sourcesArray = data.sources;
      } else {
        console.error("–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∞—Ç –º–∞—Å—Å–∏–≤ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤:", data);
        return false;
      }

      const selectedTranslate = sourcesArray.find(
        (translate) => translate.translate_id === String(translatorId)
      );

      if (!selectedTranslate) {
        console.error(
          "–ò—Å—Ç–æ—á–Ω–∏–∫ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω:",
          translatorId
        );
        return false;
      }

      if (
        selectedTranslate.source_links &&
        selectedTranslate.source_links.length > 0
      ) {
        const lastSource =
          selectedTranslate.source_links[
            selectedTranslate.source_links.length - 1
          ];
        if (lastSource && lastSource.url) {
          kodiWebSocket.openFile(lastSource.url);

          // –î–æ–∂–∏–¥–∞–µ–º—Å—è Player.OnPlay
          try {
            await waitForPlayerOnPlay(4000); // 4 —Å–µ–∫—É–Ω–¥—ã
            return true; // –í—Å—ë –æ–∫ ‚Äî –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –Ω–∞—á–∞–ª–æ—Å—å
          } catch (err) {
            console.error("Kodi –Ω–µ –Ω–∞—á–∞–ª –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ:", err);
            return false;
          }
        } else {
          console.error("URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–æ—Å–ª–µ–¥–Ω–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–µ", lastSource);
          return false;
        }
      } else {
        console.error("–î–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–∞ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å—Å—ã–ª–æ–∫");
        return false;
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∞:", error);
      return false;
    }
  };

  return { playMovieSource };
};

export default useMovieSource;
